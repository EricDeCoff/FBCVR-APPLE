exports.defineAutoTests=function(){describe("Battery (navigator.battery)",function(){it("battery.spec.1 should exist",function(){expect(navigator.battery).toBeDefined()})}),describe("Battery Events",function(){beforeEach(function(){jasmine.Expectation.addMatchers({toBatteryStatus:function(){return{compare:function(t,e){var i=t;return{pass:i,message:e}}}}})}),it("battery.spec.2 should fire batterystatus events",function(t){var e=function(){window.removeEventListener("batterystatus",e,!1),i=!0},i=!1;window.addEventListener("batterystatus",e,!1),navigator.battery._status({level:30,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterystatus" event, it did not fire'),t()},100)}),it("battery.spec.3 should fire batterylow event (30 -> 20)",function(t){var e=function(){window.removeEventListener("batterylow",e,!1),i=!0},i=!1;navigator.battery._status({level:30,isPlugged:!1}),window.addEventListener("batterylow",e,!1),navigator.battery._status({level:20,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterylow" event (30 -> 20), it did not fire'),t()},100)}),it("battery.spec.3.1 should fire batterylow event (30 -> 19)",function(t){var e=function(){window.removeEventListener("batterylow",e,!1),i=!0},i=!1;navigator.battery._status({level:30,isPlugged:!1}),window.addEventListener("batterylow",e,!1),navigator.battery._status({level:19,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterylow" event (30 -> 19), it did not fire'),t()},100)}),it("battery.spec.3.2 should not fire batterylow event (5 -> 20)",function(t){var e=function(){window.removeEventListener("batterylow",e,!1),i=!1},i=!0;navigator.battery._status({level:5,isPlugged:!1}),window.addEventListener("batterylow",e,!1),navigator.battery._status({level:20,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterylow" event (5 -> 20), should not be fired'),t()},100)}),it("battery.spec.3.3 batterylow event(21 -> 20) should not fire if charging",function(t){var e=function(){window.removeEventListener("batterylow",e,!1),i=!1},i=!0;navigator.battery._status({level:21,isPlugged:!0}),window.addEventListener("batterylow",e,!1),navigator.battery._status({level:20,isPlugged:!0}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterylow" event (21 -> 20), should not be fired if charging'),t()},100)}),it("battery.spec.4 should fire batterycritical events (19 -> 5)",function(t){var e=function(){window.removeEventListener("batterycritical",e,!1),i=!0},i=!1;navigator.battery._status({level:19,isPlugged:!1}),window.addEventListener("batterycritical",e,!1),navigator.battery._status({level:5,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterycritical" event (19 -> 5), it did not fire'),t()},100)}),it("battery.spec.4.1 should fire batterycritical (19 -> 4) events",function(t){var e=function(){window.removeEventListener("batterycritical",e,!1),i=!0},i=!1;navigator.battery._status({level:19,isPlugged:!1}),window.addEventListener("batterycritical",e,!1),navigator.battery._status({level:4,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterycritical" event (19 -> 4), it did not fire'),t()},100)}),it("battery.spec.4.2 should fire batterycritical event (100 -> 4) when decreases",function(t){var e=function(){window.removeEventListener("batterycritical",e,!1),i=!0},i=!1;navigator.battery._status({level:100,isPlugged:!1}),window.addEventListener("batterycritical",e,!1),navigator.battery._status({level:4,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterycritical" event (100 -> 4), it did not fire'),t()},100)}),it("battery.spec.4.3 should not fire batterycritical event (4 -> 5) when increasing",function(t){var e=function(){window.removeEventListener("batterycritical",e,!1),i=!1},i=!0;navigator.battery._status({level:4,isPlugged:!1}),window.addEventListener("batterycritical",e,!1),navigator.battery._status({level:5,isPlugged:!1}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterycritical" event (4 -> 5), should not be fired'),t()},100)}),it("battery.spec.4.4 should not fire batterycritical event (6 -> 5) if charging",function(t){var e=function(){window.removeEventListener("batterycritical",e,!1),i=!1},i=!0;navigator.battery._status({level:6,isPlugged:!0}),window.addEventListener("batterycritical",e,!1),navigator.battery._status({level:5,isPlugged:!0}),setTimeout(function(){expect(i).toBatteryStatus('Listener: "batterycritical" event (6 -> 5), should not be fired if charging'),t()},100)})})},exports.defineManualTests=function(t,e){function i(t){document.getElementById("levelValue").innerText=t.level,document.getElementById("pluggedValue").innerText=t.isPlugged,t.level>5&&(document.getElementById("criticalValue").innerText="false"),t.level>20&&(document.getElementById("lowValue").innerText="false")}function n(){document.getElementById("lowValue").innerText="true"}function a(){document.getElementById("criticalValue").innerText="true"}function r(){window.addEventListener("batterystatus",i,!1)}function o(){window.removeEventListener("batterystatus",i,!1)}function l(){window.addEventListener("batterylow",n,!1)}function s(){window.removeEventListener("batterylow",n,!1)}function d(){window.addEventListener("batterycritical",a,!1)}function c(){window.removeEventListener("batterycritical",a,!1)}function u(t,e,i,n){for(var a=document.createElement("table"),r=0;e>r;r++)for(var o=a.insertRow(r),l=0;i>l;l++){var s=o.insertCell(l);s.setAttribute("align","center");for(var d in n)if(n[d].position.row==r&&n[d].position.cell==l){var c,u=document.createElement(n[d].tag);""!==n[d].content&&(c=document.createTextNode(n[d].content),u.appendChild(c)),n[d].type&&(u.type=n[d].type),u.setAttribute("id",n[d].id),s.appendChild(u)}}return a.setAttribute("align","center"),a.setAttribute("id",t),a}var v=[{id:"statusTag",content:"Status:",tag:"div",position:{row:0,cell:0}},{id:"statusValue",content:"",tag:"div",position:{row:0,cell:1}},{id:"levelTag",content:"Level:",tag:"div",position:{row:1,cell:0}},{id:"levelValue",content:"",tag:"div",position:{row:1,cell:1}},{id:"pluggedTag",content:"Plugged:",tag:"div",position:{row:2,cell:0}},{id:"pluggedValue",content:"",tag:"div",position:{row:2,cell:1}},{id:"lowTag",content:"Low:",tag:"div",position:{row:3,cell:0}},{id:"lowValue",content:"",tag:"div",position:{row:3,cell:1}},{id:"criticalTag",content:"Critical:",tag:"div",position:{row:4,cell:0}},{id:"criticalValue",content:"",tag:"div",position:{row:4,cell:1}}],y=document.createElement("h2");y.appendChild(document.createTextNode("Battery Status")),y.setAttribute("align","center"),t.appendChild(y);var g=u("info",5,3,v);t.appendChild(g),y=document.createElement("h2"),y.appendChild(document.createTextNode("Actions")),y.setAttribute("align","center"),t.appendChild(y),t.innerHTML+='<h3>Battery Status Tests</h3>Will update values for level and plugged when they change. If battery low and critical values are false, they will get updated in status box, but only once<div id="addBS"></div><div id="remBs"></div><h3>Battery Low Tests</h3></p> Will update value for battery low to true when battery is below 20%<div id="addBl"></div><div id="remBl"></div><h3>Battery Critical Tests</h3></p> Will update value for battery critical to true when battery is below 5%<div id="addBc"></div><div id="remBc"></div>',e('Add "batterystatus" listener',function(){r()},"addBS"),e('Remove "batterystatus" listener',function(){o()},"remBs"),e('Add "batterylow" listener',function(){l()},"addBl"),e('Remove "batterylow" listener',function(){s()},"remBl"),e('Add "batterycritical" listener',function(){d()},"addBc"),e('Remove "batterycritical" listener',function(){c()},"remBc")};