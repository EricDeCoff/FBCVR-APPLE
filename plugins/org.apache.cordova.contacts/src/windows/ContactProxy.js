function convertToContact(t){var n=new Contact;n.displayName=t.name||t.displayName,n.nickname=t.name,n.name=new ContactName(t.name||t.displayName,t.lastName,t.middleName,t.honorificPrefix,t.honorificSuffix),n.phoneNumbers=[];for(var o=t.phoneNumbers||t.phones,e=0;e<o.size;e++){var a=o[e],r=new ContactField(a.category||a.kind,a.value||a.number);n.phoneNumbers.push(r)}n.emails=[];for(var c=t.emails,e=0;e<c.size;e++){var i=c[e],s=new ContactField(i.category||i.kind,i.value||i.address);n.emails.push(s)}n.addresses=[];for(var d=t.locations||t.addresses,e=0;e<d.size;e++){var u=d[e],C=new ContactAddress(null,u.category||u.kind,u.unstructuredAddress,u.street||u.streetAddress,u.city||u.locality,u.region,u.postalCode,u.country);n.addresses.push(C)}n.ims=[];for(var l=t.instantMessages||t.connectedServiceAccounts,e=0;e<l.size;e++){var p=l[e],v=new ContactField(p.category||p.serviceName,p.userName||p.id);n.ims.push(v)}var N=t.jobInfo;if(N){n.organizations=[];for(var f=0;f<N.size;f++){var m=N[e];n.organizations.push(new ContactOrganization(!1,null,m.companyName,m.department,m.title))}}var y=t.notes;y&&(n.note=y);var E=t.thumbnail;return E&&E.path&&(n.photos=[new ContactField(null,E.path,!1)]),n}var ContactField=require("./ContactField"),ContactAddress=require("./ContactAddress"),ContactOrganization=require("./ContactOrganization"),ContactName=require("./ContactName"),ContactError=require("./ContactError"),Contact=require("./Contact"),contactsNS=Windows.ApplicationModel.Contacts;module.exports={pickContact:function(t,n){var o=-1!==navigator.userAgent.indexOf("Windows Phone"),e=new contactsNS.ContactPicker;o&&e.desiredFieldsWithContactFieldType.append(Windows.ApplicationModel.Contacts.ContactFieldType.phoneNumber);var a=e.pickContactAsync?e.pickContactAsync():e.pickSingleContactAsync();a.done(function(e){return e?o?void contactsNS.ContactManager.requestStoreAsync().done(function(o){o.getContactAsync(e.id).done(function(n){t(convertToContact(n))},function(){n(new ContactError(ContactError.UNKNOWN_ERROR))})},function(){n(new ContactError(ContactError.UNKNOWN_ERROR))}):void t(convertToContact(e)):void(n&&n(new Error("User did not pick a contact.")))})},save:function(t,n){n&&n(ContactError.NOT_SUPPORTED_ERROR)},search:function(t,n,o){var e=(o[0],o[1]),a=e.filter,r=e&&e.multiple;if(!contactsNS.ContactManager||!contactsNS.ContactManager.requestStoreAsync)return void n(new ContactError(ContactError.NOT_SUPPORTED_ERROR));var c=contactsNS.ContactManager.requestStoreAsync();c.done(function(o){var e=a?o.findContactsAsync(a):o.findContactsAsync();e.done(function(n){var o=[];if(0!==n.size){var e=r?n:[n[0]];e.forEach(function(t){o.push(convertToContact(t))})}t(o)},function(){n(new ContactError(ContactError.UNKNOWN_ERROR))})},function(){n(new ContactError(ContactError.UNKNOWN_ERROR))})}},require("cordova/exec/proxy").add("Contacts",module.exports);