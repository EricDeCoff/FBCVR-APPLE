exports.defineAutoTests=function(){var t=function(t){expect(!0).toBe(!1),t()},e=function(t){expect(!0).toBe(!0),t()},o="windows8"==cordova.platformId||"windows"==cordova.platformId&&!WinJS.Utilities.isPhone;describe("Geolocation (navigator.geolocation)",function(){it("geolocation.spec.1 should exist",function(){expect(navigator.geolocation).toBeDefined()}),it("geolocation.spec.2 should contain a getCurrentPosition function",function(){expect(typeof navigator.geolocation.getCurrentPosition).toBeDefined(),expect("function"==typeof navigator.geolocation.getCurrentPosition).toBe(!0)}),it("geolocation.spec.3 should contain a watchPosition function",function(){expect(typeof navigator.geolocation.watchPosition).toBeDefined(),expect("function"==typeof navigator.geolocation.watchPosition).toBe(!0)}),it("geolocation.spec.4 should contain a clearWatch function",function(){expect(typeof navigator.geolocation.clearWatch).toBeDefined(),expect("function"==typeof navigator.geolocation.clearWatch).toBe(!0)})}),describe("getCurrentPosition method",function(){describe("error callback",function(){it("geolocation.spec.5 should be called if we set timeout to 0 and maximumAge to a very small number",function(i){o&&pending(),navigator.geolocation.getCurrentPosition(t.bind(null,i),e.bind(null,i),{maximumAge:0,timeout:0})})}),describe("success callback",function(){it("geolocation.spec.6 should be called with a Position object",function(e){o&&pending(),navigator.geolocation.getCurrentPosition(function(t){expect(t.coords).toBeDefined(),expect(t.timestamp).toBeDefined(),e()},t.bind(null,e),{maximumAge:3e5})})})}),describe("watchPosition method",function(){describe("error callback",function(){var i=null;afterEach(function(){navigator.geolocation.clearWatch(i)}),it("geolocation.spec.7 should be called if we set timeout to 0 and maximumAge to a very small number",function(n){o&&pending(),i=navigator.geolocation.watchPosition(t.bind(null,n),e.bind(null,n),{maximumAge:0,timeout:0})})}),describe("success callback",function(){var e=null;afterEach(function(){navigator.geolocation.clearWatch(e)}),it("geolocation.spec.8 should be called with a Position object",function(i){o&&pending(),e=navigator.geolocation.watchPosition(function(t){expect(t.coords).toBeDefined(),expect(t.timestamp).toBeDefined(),i()},t.bind(null,i),{maximumAge:3e5})})})})},exports.defineManualTests=function(t,e){var o=navigator.geolocation,i=cordova.require("cordova/modulemapper").getOriginalSymbol(window,"navigator.geolocation");i||(i=o,o=null);var n=null,a=function(t){console.log("watchLocation()");var e=t?o:i;if(!e)return void alert("geolocation object is missing. usePlugin = "+t);var a=function(t){r(t)},d=function(t){console.log("watchLocation fail callback with error code "+t),c(e)};n=e.watchPosition(a,d,{enableHighAccuracy:!0}),l("Running")},c=function(t){console.log("stopLocation()");var e=t?o:i;return e?(l("Stopped"),void(n&&(e.clearWatch(n),n=null))):void alert("geolocation object is missing. usePlugin = "+t)},d=function(t,e){console.log("getLocation()");var n=t?o:i;if(!n)return void alert("geolocation object is missing. usePlugin = "+t);c(n);var a=function(t){r(t),l("Done")},d=function(t){console.log("getLocation fail callback with error code "+t.code),l("Error: "+t.code)};l("Retrieving location..."),n.getCurrentPosition(a,d,e||{enableHighAccuracy:!0})},l=function(t){document.getElementById("location_status").innerHTML=t},r=function(t){var e=new Date(t.timestamp);document.getElementById("latitude").innerHTML=t.coords.latitude,document.getElementById("longitude").innerHTML=t.coords.longitude,document.getElementById("altitude").innerHTML=t.coords.altitude,document.getElementById("accuracy").innerHTML=t.coords.accuracy,document.getElementById("heading").innerHTML=t.coords.heading,document.getElementById("speed").innerHTML=t.coords.speed,document.getElementById("altitude_accuracy").innerHTML=t.coords.altitudeAccuracy,document.getElementById("timestamp").innerHTML=e.toDateString()+" "+e.toTimeString()},u='<div id="info"><b>Status:</b> <span id="location_status">Stopped</span><table width="100%">',s='<tr><td><b>Latitude:</b></td><td id="latitude">&nbsp;</td><td>(decimal degrees) geographic coordinate [<a href="http://dev.w3.org/geo/api/spec-source.html#lat">#ref]</a></td></tr>',g='<tr><td><b>Longitude:</b></td><td id="longitude">&nbsp;</td><td>(decimal degrees) geographic coordinate [<a href="http://dev.w3.org/geo/api/spec-source.html#lat">#ref]</a></td></tr>',p='<tr><td><b>Altitude:</b></td><td id="altitude">&nbsp;</td><td>null if not supported;<br>(meters) height above the [<a href="http://dev.w3.org/geo/api/spec-source.html#ref-wgs">WGS84</a>] ellipsoid. [<a href="http://dev.w3.org/geo/api/spec-source.html#altitude">#ref]</a></td></tr>',h='<tr><td><b>Accuracy:</b></td><td id="accuracy">&nbsp;</td><td>(meters; non-negative; 95% confidence level) the accuracy level of the latitude and longitude coordinates. [<a href="http://dev.w3.org/geo/api/spec-source.html#accuracy">#ref]</a></td></tr>',f='<tr><td><b>Heading:</b></td><td id="heading">&nbsp;</td><td>null if not supported;<br>NaN if speed == 0;<br>(degrees; 0° ≤ heading < 360°) direction of travel of the hosting device- counting clockwise relative to the true north. [<a href="http://dev.w3.org/geo/api/spec-source.html#heading">#ref]</a></td></tr>',v='<tr><td><b>Speed:</b></td><td id="speed">&nbsp;</td><td>null if not supported;<br>(meters per second; non-negative) magnitude of the horizontal component of the hosting device current velocity. [<a href="http://dev.w3.org/geo/api/spec-source.html#speed">#ref]</a></td></tr>',m='<tr><td><b>Altitude Accuracy:</b></td><td id="altitude_accuracy">&nbsp;</td><td>null if not supported;<br>(meters; non-negative; 95% confidence level) the accuracy level of the altitude. [<a href="http://dev.w3.org/geo/api/spec-source.html#altitude-accuracy">#ref]</a></td></tr>',b='<tr><td><b>Time:</b></td><td id="timestamp">&nbsp;</td><td>(DOMTimeStamp) when the position was acquired [<a href="http://dev.w3.org/geo/api/spec-source.html#timestamp">#ref]</a></td></tr></table></div>',w='<h2>Use Built-in WebView navigator.geolocation</h2><div id="built-in-getLocation"></div>Expected result: Will update all applicable values in status box for current location. Status will read Retrieving Location (may not see this if location is retrieved immediately) then Done.<p/> <div id="built-in-watchLocation"></div>Expected result: Will update all applicable values in status box for current location and update as location changes. Status will read Running.<p/> <div id="built-in-stopLocation"></div>Expected result: Will stop watching the location so values will not be updated. Status will read Stopped.<p/> <div id="built-in-getOld"></div>Expected result: Will update location values with a cached position that is up to 30 seconds old. Verify with time value. Status will read Done.<h2>Use Cordova Geolocation Plugin</h2><div id="cordova-getLocation"></div>Expected result: Will update all applicable values in status box for current location. Status will read Retrieving Location (may not see this if location is retrieved immediately) then Done.<p/> <div id="cordova-watchLocation"></div>Expected result: Will update all applicable values in status box for current location and update as location changes. Status will read Running.<p/> <div id="cordova-stopLocation"></div>Expected result: Will stop watching the location so values will not be updated. Status will read Stopped.<p/> <div id="cordova-getOld"></div>Expected result: Will update location values with a cached position that is up to 30 seconds old. Verify with time value. Status will read Done.',y="<h3>Details about each value are listed below in the status box</h3>",L="<h3>Allow use of current location, if prompted</h3>";t.innerHTML=y+u+s+g+p+h+f+v+m+b+L+w,e("Get Location",function(){d(!1)},"built-in-getLocation"),e("Start Watching Location",function(){a(!1)},"built-in-watchLocation"),e("Stop Watching Location",function(){c(!1)},"built-in-stopLocation"),e("Get Location Up to 30 Sec Old",function(){d(!1,{maximumAge:3e4})},"built-in-getOld"),e("Get Location",function(){d(!0)},"cordova-getLocation"),e("Start Watching Location",function(){a(!0)},"cordova-watchLocation"),e("Stop Watching Location",function(){c(!0)},"cordova-stopLocation"),e("Get Location Up to 30 Sec Old",function(){d(!0,{maximumAge:3e4})},"cordova-getOld")};