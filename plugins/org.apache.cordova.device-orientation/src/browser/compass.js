var argscheck=require("cordova/argscheck"),exec=require("cordova/exec"),utils=require("cordova/utils"),CompassHeading=require("./CompassHeading"),CompassError=require("./CompassError"),timers={},compass={getCurrentHeading:function(e,r,i){argscheck.checkArgs("fFO","compass.getCurrentHeading",arguments);var a=function(r){var i=new CompassHeading(r.magneticHeading,r.trueHeading,r.headingAccuracy,r.timestamp);e(i)},n=r&&function(e){var i=new CompassError(e);r(i)};exec(a,n,"Compass","getHeading",[i])},watchHeading:function(e,r,i){argscheck.checkArgs("fFO","compass.watchHeading",arguments);var a=void 0!==i&&void 0!==i.frequency?i.frequency:100,n=void 0!==i&&void 0!==i.filter?i.filter:0,t=utils.createUUID();return n>0?(timers[t]="iOS",compass.getCurrentHeading(e,r,i)):timers[t]=window.setInterval(function(){compass.getCurrentHeading(e,r)},a),deviceorientation=new Event("deviceorientation"),window.setInterval(function(){window.dispatchEvent(deviceorientation)},200),t},clearWatch:function(e){e&&timers[e]&&("iOS"!=timers[e]?clearInterval(timers[e]):exec(null,null,"Compass","stopHeading",[]),delete timers[e])}};module.exports=compass;