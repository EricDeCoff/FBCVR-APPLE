exports.defineAutoTests=function(){describe("Capture (navigator.device.capture)",function(){it("capture.spec.1 should exist",function(){expect(navigator.device).toBeDefined(),expect(navigator.device.capture).toBeDefined()}),it("capture.spec.2 should have the correct properties ",function(){expect(navigator.device.capture.supportedAudioModes).toBeDefined(),expect(navigator.device.capture.supportedImageModes).toBeDefined(),expect(navigator.device.capture.supportedVideoModes).toBeDefined()}),it("capture.spec.3 should contain a captureAudio function",function(){expect(navigator.device.capture.captureAudio).toBeDefined(),expect("function"==typeof navigator.device.capture.captureAudio).toBe(!0)}),it("capture.spec.4 should contain a captureImage function",function(){expect(navigator.device.capture.captureImage).toBeDefined(),expect("function"==typeof navigator.device.capture.captureImage).toBe(!0)}),it("capture.spec.5 should contain a captureVideo function",function(){expect(navigator.device.capture.captureVideo).toBeDefined(),expect("function"==typeof navigator.device.capture.captureVideo).toBe(!0)}),describe("CaptureAudioOptions",function(){it("capture.spec.6 CaptureAudioOptions constructor should exist",function(){var e=new CaptureAudioOptions;expect(e).toBeDefined(),expect(e.limit).toBeDefined(),expect(e.duration).toBeDefined()})}),describe("CaptureImageOptions",function(){it("capture.spec.7 CaptureImageOptions constructor should exist",function(){var e=new CaptureImageOptions;expect(e).toBeDefined(),expect(e.limit).toBeDefined()})}),describe("CaptureVideoOptions",function(){it("capture.spec.8 CaptureVideoOptions constructor should exist",function(){var e=new CaptureVideoOptions;expect(e).toBeDefined(),expect(e.limit).toBeDefined(),expect(e.duration).toBeDefined()})}),describe("CaptureError interface",function(){it("capture.spec.9 CaptureError constants should be defined",function(){expect(CaptureError.CAPTURE_INTERNAL_ERR).toBe(0),expect(CaptureError.CAPTURE_APPLICATION_BUSY).toBe(1),expect(CaptureError.CAPTURE_INVALID_ARGUMENT).toBe(2),expect(CaptureError.CAPTURE_NO_MEDIA_FILES).toBe(3)}),it("capture.spec.10 CaptureError properties should exist",function(){var e=new CaptureError;expect(e).toBeDefined(),expect(e.code).toBeDefined()})}),describe("MediaFileData",function(){it("capture.spec.11 MediaFileData constructor should exist",function(){var e=new MediaFileData;expect(e).toBeDefined(),expect(e.bitrate).toBeDefined(),expect(e.codecs).toBeDefined(),expect(e.duration).toBeDefined(),expect(e.height).toBeDefined(),expect(e.width).toBeDefined()})}),describe("MediaFile",function(){it("capture.spec.12 MediaFile constructor should exist",function(){var e=new MediaFile;expect(e).toBeDefined(),expect(e.name).toBeDefined(),expect(e.type).toBeDefined(),expect(e.lastModifiedDate).toBeDefined(),expect(e.size).toBeDefined()})})})},exports.defineManualTests=function(e,t){function i(e){document.getElementById("camera_status").textContent+=(new Date-x)/1e3+": "+e+"\n",console.log(e)}function o(e){var t=e[0].fullPath;i("Audio captured: "+t);var o=new Media(t);o.play()}function a(e){i("Error getting audio: "+e.code)}function c(){m();var e={limit:1,duration:10};navigator.device.capture.captureAudio(o,a,e)}function n(e){var t=e[0].fullPath;("windows"==cordova.platformId||"windows8"==cordova.platformId)&&(t=e[0].localURL),i("Image captured: "+t),document.getElementById("camera_image").src=t}function r(e){i("Error getting image: "+e.code)}function d(){m();var e={limit:1};navigator.device.capture.captureImage(n,r,e)}function u(e){var t=e[0].fullPath;i("Video captured: "+t);var o=document.createElement("video");o.id="theVideo",o.width="320",o.height="240",o.controls="true";var a=document.createElement("source");a.id="theSource",a.src=t,o.appendChild(a),document.getElementById("video_container").appendChild(o)}function p(e){i("Error getting video: "+e.code)}function s(){m();var e={limit:1,duration:10};navigator.device.capture.captureVideo(u,p,e)}function f(e,t){resolveLocalFileSystemURL(e.localURL,function(){i("Resolved by URL: "+e.localURL),t&&t()},function(o){i("Failed to resolve by URL: "+e.localURL),i("Error: "+JSON.stringify(o)),t&&t()})}function l(e,t){resolveLocalFileSystemURL(e.fullPath,function(){i("Resolved by path: "+e.fullPath),t&&t()},function(o){i("Failed to resolve by path: "+e.fullPath),i("Error: "+JSON.stringify(o)),t&&t()})}function v(){m();var e={limit:1,duration:5};navigator.device.capture.captureVideo(function(e){u(e),l(e[0],function(){f(e[0])})},p,e)}function m(){document.getElementById("camera_status").innerHTML="",document.getElementById("camera_image").src="about:blank"}var x=(cordova.require("cordova/platform").id,+new Date);e.innerHTML='<div id="info" style="white-space: pre-wrap"><b>Status:</b> <div id="camera_status"></div>img: <img width="100" id="camera_image">video: <div id="video_container"></div></div><div id="audio"></div>Expected result: Audio recorder will come up. Press record button to record for 10 seconds. Press Done. Status box will update with audio file and automatically play recording.<p/> <div id="image"></div>Expected result: Status box will update with image just taken.<p/> <div id="video"></div>Expected result: Record 10 second video. Status box will update with video file that you can play.<p/> <div id="video_and_resolve"></div>Expected result: Record 5 second video. Status box will show that URL was resolved and video will get added at the bottom of the status box for playback.',t("Capture 10 sec of audio and play",function(){c()},"audio"),t("Capture 1 image",function(){d()},"image"),t("Capture 10 sec of video",function(){s()},"video"),t("Capture 5 sec of video and resolve",function(){v()},"video_and_resolve")};